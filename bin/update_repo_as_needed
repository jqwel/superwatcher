#! /usr/bin/env bash
function log(){
    echo "`date` - ${1}"
}

REPO_DIR=$1
#if you specify a directory, it had better exist
if [ ! -d "${REPO_DIR}" ]; then
  log "${REPO_DIR} doesn't exist"
  exit 1
fi

cd ${REPO_DIR}
#want to get the full directory for our repo
REPO_DIR=`pwd`

git rev-parse --git-dir >> /dev/null 2>&1
if [ $? -ne 0 ]; then
    log "${REPO_DIR} doesn't appear to be a git repo, nothing to do"
    exit 2
fi

FETCH_RESULTS=`git fetch --all `
if [ $? -ne 0 ]; then
    log "fetch error in ${REPO_DIR}"
    log $FETCH_RESULTS
    exit 4
fi
CURRENT_BRANCH=`git rev-parse --symbolic-full-name --abbrev-ref HEAD`
CURRENT_SHA=`git log -n 1 --no-merges --pretty=format:%h`
ORIGIN_URL=`git config remote.origin.url`
HAS_CHANGES=`git diff HEAD...origin/${CURRENT_BRANCH} --raw`

log "checking ${REPO_DIR} for any available changes from ${ORIGIN_URL}"
if [ "${HAS_CHANGES}x" == "x" ]; then
    exit 0
else
    #if we have a pre update script, run it
    if [ -x ./superwatcher_before_update ]; then
      ./superwatcher_before_update
    fi
    log "deploying changes for branch ${CURRENT_BRANCH} from ${ORIGIN_URL}"
    git reset --hard origin/${CURRENT_BRANCH}
    #if we have a post update script, run it
    if [ -x ./superwatcher_after_update ]; then
      ./superwatcher_after_update
    fi
    exit 0
fi
